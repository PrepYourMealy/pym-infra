services:
  # Deployment
  watchtower:
    image: containrrr/watchtower
    command:
      - "--label-enable"
      - "--interval"
      - "30"
      - "--rolling-restart"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # Proxy and LetsEncrypt
  reverse-proxy:
    image: traefik:v3.1
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=henry.schwerdtner@web.de"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock

  # Front-End
  front-end:
    image: ghcr.io/prepyourmealy/pym-front-end:prod
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.guestbook.rule=Host(`prepmymealy.app`)"
      - "traefik.http.routers.guestbook.entrypoints=websecure"
      - "traefik.http.routers.guestbook.tls.certresolver=myresolver"
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      - APPLICATION_SERVER_URL=http://server:3000
      - CLERK_SECRET_KEY=/run/secrets/clerk-secret
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=/run/secrets/clerk-public
    deploy:
      mode: replicated
      replicas: 2

  # Mongo Express
  mongo-express:
    container_name: mongo-express
    restart: unless-stopped
    image: mongo-express:latest
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://db:27017/tracking-detector
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=false
      - ME_CONFIG_BASICAUTH=false
      - ME_CONFIG_SITE_BASEURL=/mongo
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.mongo-express.rule=(Host(`dashboard.prepmymealy.app`) && PathPrefix(`/mongo`))'
      - "traefik.http.services.mongo-express.loadbalancer.server.port=8081"
      - "traefik.http.routers.mongo-express.entrypoints=websecure"
      - "traefik.http.routers.mongo-express.tls.certresolver=myresolver"
      - 'traefik.http.routers.mongo-express.basicauth.userfile=./users.txt'
    depends_on:
      - db
    networks:
      - app-network

  # Portainer
  portainer:
    image: portainer/portainer-ce:latest
    command: -H unix:///var/run/docker.sock
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # if you want to persist settings, add the data volume mapping below
      - portainer_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.prepmymealy.app`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.routers.portainer.service=portainer"
      - "traefik.http.routers.portainer.tls.certresolver=myresolver"
    networks:
      - app-network

  # Application-Server
  server:
    image: ghcr.io/prepyourmealy/pym-application-server:prod
    depends_on:
      - db
    restart: always
    secrets:
      - openai-secret
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://db:27017/pym
      - OPENAI_API_KEY=/run/secrets/openai-secret

  # Scrape-Cron-Service
  scrape:
    image: ghcr.io/prepyourmealy/pym-scrape-cron:prod
    depends_on:
      - db
      - server
    container_name: scrape
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      - APPLICATION_SERVER_URL=http://server:3000

  # MongoDb
  db:
    image: mongo:latest
    container_name: db
    restart: always
    volumes:
      - db-data:/data/db


volumes:
  db-data:
  letsencrypt:
secrets:
  clerk-secret:
    file: clerk/secret/password.txt
  clerk-public:
    file: clerk/public/password.txt
  openai-secret:
    file: openai/password.txt